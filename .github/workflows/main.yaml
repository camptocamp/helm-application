name: Continuous integration

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

permissions:
  actions: write
  contents: write

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    runs-on: ubuntu-22.04
    name: Continuous integration
    timeout-minutes: 20
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    strategy:
      fail-fast: true
      matrix:
        helm:
          - latest
          - 3.5.1

    steps:
      - run: docker system prune --all --force
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
      - run: pre-commit run --all-files
        env:
          SKIP: helm-lock
      - run: git diff && false
        if: failure()
      - name: Checks
        run: c2cciutils-checks

      - name: Install helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ matrix.helm }}
      - run: helm dependency update .
      - run: helm lint .
      - run: helm lint --values=tests/values.yaml .

      - name: Setup k3s/k3d
        run: c2cciutils-k8s-install

      - name: Install prometheus CRD
        run: |
          curl https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/jsonnet/prometheus-operator/podmonitors-crd.json --output /tmp/podmonitors-crd.json
          kubectl apply -f /tmp/podmonitors-crd.json

      - name: Apply
        run: kubectl apply -f tests/expected.yaml

      - name: Publish
        run: c2cciutils-publish
        if: matrix.helm == 'latest'

      - name: Trigger changelog workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/github-script@v6
        with:
          script: |-
            if (process.env.GITHUB_REF_TYPE == 'tag') {
                console.log('Trigger changelog');
                await github.rest.repos.createDispatchEvent({
                    owner: 'camptocamp',
                    repo: 'helm-mutualize',
                    event_type: 'changelog',
                });
            }
