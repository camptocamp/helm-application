{{- range $serviceName, $serviceDefinition := .Values.services }}
{{- if eq $serviceDefinition.enabled true }}
{{- if eq ( default "Deployment" $serviceDefinition.type ) "StatefulSet" }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" ( dict "root" $ "service" $serviceDefinition "serviceName" $serviceName ) }}
  {{- include "common.metadata" ( dict "root" $ "service" $serviceDefinition "serviceName" $serviceName ) | nindent 2 }}
spec:
  {{- if $serviceDefinition.serviceName }}
  serviceName: {{ $serviceDefinition.serviceName }}
  {{- end }}
  {{- if $serviceDefinition.replicaCount }}
  replicas: {{ $serviceDefinition.replicaCount }}
  {{- end }}
  {{- if $serviceDefinition.replicas }}
  replicas: {{ $serviceDefinition.replicas }}
  {{- end }}
  {{- if $serviceDefinition.minReadySeconds }}
  minReadySeconds: {{ $serviceDefinition.minReadySeconds }}
  {{- end }}
  {{- if $serviceDefinition.podManagementPolicy }}
  podManagementPolicy: {{ $serviceDefinition.podManagementPolicy }}
  {{- end }}
  {{- if $serviceDefinition.ordinals }}
  ordinals: {{ toYaml $serviceDefinition.ordinals | nindent 6 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.selectorLabels" ( dict "root" $ "service" $serviceDefinition "serviceName" $serviceName ) | nindent 6 }}
  {{- with $serviceDefinition.persistentVolumeClaimRetentionPolicy }}
  persistentVolumeClaimRetentionPolicy: {{ toYaml . | nindent 6 }}
  {{- end }}
  {{- with $serviceDefinition.updateStrategy }}
  updateStrategy: {{ toYaml . | nindent 6 }}
  {{- end }}
  {{- with $serviceDefinition.volumeClaimTemplates }}
  volumeClaimTemplates: {{ toYaml . | nindent 6 }}
  {{- end }}
  template:
    metadata: {{- include "application.podMetadata" ( dict "root" $ "service" $serviceDefinition "serviceName" $serviceName ) | nindent 6 }}
    spec:
      {{- include "application.podConfig" ( dict "root" $ "service" $serviceDefinition "serviceName" $serviceName ) | nindent 6 }}
      {{- with $serviceDefinition.restartPolicy }}
      restartPolicy: {{ . }}
      {{- end }}
      {{- if and (hasKey $serviceDefinition "initContainers") ($serviceDefinition.initContainers) }}
      initContainers:
      {{- range $name, $config := $serviceDefinition.initContainers }}
        - name: {{ $name }}
          {{- include "application.containerConfig" ( dict "root" $ "container" $config ) | nindent 10 }}
          {{- with $config.command }}
          command: {{ . | toYaml | nindent 12 }}
          {{- end }}
          {{- with $config.args }}
          args: {{ . | toYaml | nindent 12 }}
          {{- end }}
          {{- with $config.volumeMounts }}
          volumeMounts:
          {{- include "common.dictToList" ( dict "keyName" "mountPath" "contents" . ) | nindent 12 }}
          {{- end }}
          {{- with $config.volumeDevices }}
          volumeDevices:
          {{- include "common.dictToList" ( dict "keyName" "devicePath" "contents" . ) | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- end }}
      containers:
      {{- range $name, $config := $serviceDefinition.containers }}
        - name: {{ $name }}
          {{- include "application.containerConfig" ( dict "root" $ "container" $config ) | nindent 10 }}
          {{- with $config.command }}
          command:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with $config.args }}
          args:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with $config.volumeMounts }}
          volumeMounts:
          {{- include "common.dictToList" ( dict "keyName" "mountPath" "contents" . ) | nindent 12 }}
          {{- end }}
          {{- with $config.volumeDevices }}
          volumeDevices:
          {{- include "common.dictToList" ( dict "keyName" "devicePath" "contents" . ) | nindent 12 }}
          {{- end }}
          {{- with $config.ports }}
          ports:
          {{- include "common.dictToList" ( dict "contents" . ) | nindent 12 }}
          {{- end }}
          {{- with $config.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $config.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $config.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $config.workingDir }}
          workingDir: {{ . }}
          {{- end }}
      {{- end }}
      {{- with $serviceDefinition.volumes }}
      volumes:
      {{- include "common.dictToList" ( dict "contents" . ) | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
{{- end }}
