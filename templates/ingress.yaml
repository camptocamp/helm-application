{{- if eq $.Values.ingress.enabled true -}}
{{- $fullName := include "common.fullname" ( dict "root" $ "service" $.Values ) -}}
{{- range $hostGroupName, $hostGroupDefinition := $.Values.ingress.hostGroups }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}-{{ $hostGroupName }}
  {{- include "common.metadata" ( dict "root" $ "service" $.Values ) | nindent 2 }}
spec:
# Add tls only if ingress.tls.enabled is set to true and the other fields are complete.
{{- if and ( hasKey $hostGroupDefinition "tls" ) ( eq $hostGroupDefinition.tls.enabled true ) }}
  tls:
    - hosts:
        {{- range $hostGroupDefinition.hosts }}
        - {{ . | quote }}
        {{- end }}
      {{- if $hostGroupDefinition.tls.secretName }}
      secretName: {{ $hostGroupDefinition.tls.secretName }}
      {{- else }}
      secretName: {{ $fullName }}-{{ $hostGroupName }}
      {{- end }}
{{- end }}
  rules:
    {{- range $hostGroupDefinition.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
        {{- range $serviceName, $serviceDefinition := $.Values.services }}
        {{- if and (eq $serviceDefinition.enabled true) (eq $serviceDefinition.ingress.enabled true) }}
          - path: "{{ $serviceDefinition.ingress.path }}"
            pathType: Prefix
            backend:
              service:
              {{- if hasKey $serviceDefinition.service "name" }}
                name: {{ $serviceDefinition.service.name }}
              {{- else }}
                name: {{ include "common.fullname" ( dict "root" $ "service" $serviceDefinition "serviceName" $serviceName ) }}
              {{- end }}
                port:
                  number: {{ $serviceDefinition.service.servicePort | default 80 }}
        {{- end }}
        {{- end }}
    {{- end }}
{{- end }}
{{- end }}
