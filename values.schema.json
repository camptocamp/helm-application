{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "title": "HELM custom Pod configuration",
  "definitions": {
    "nameOverride": {
      "type": "string",
      "description": "[helm-common] Override the name"
    },
    "fullnameOverride": {
      "type": "string",
      "description": "[helm-common] Override the fullname"
    },
    "releaseTrunc": {
      "type": "integer",
      "description": "[helm-common] The release trunk length",
      "default": 20
    },
    "prefixTrunc": {
      "type": "integer",
      "description": "[helm-common] The prefix trunk length (release and chart name)",
      "default": 40
    },
    "serviceAccount": {
      "type": "object",
      "description": "Service account configuration",
      "additionalProperties": false,
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Create a service account"
        },
        "name": {
          "type": "string",
          "description": "Name of the service account"
        },
        "annotations": {
          "$ref": "#/definitions/annotations"
        }
      }
    },
    "podSecurityContext": {
      "type": "object",
      "description": "Pod security context"
    },
    "securityContext": {
      "type": "object",
      "description": "Container security context"
    },
    "globalImage": {
      "type": "object",
      "description": "[helm-common] global image configuration",
      "additionalProperties": false,
      "properties": {
        "pullPolicy": {
          "type": "string",
          "description": "Image pull policy"
        },
        "pullSecrets": {
          "type": "array",
          "description": "Image pull secrets"
        }
      }
    },
    "configMapNameOverride": {
      "type": "object",
      "description": "[helm-common] global: Used to be able to globally override the name of the ConfigMap",
      "additionalProperties": {
        "type": "string"
      }
    },
    "labels": {
      "type": "object",
      "description": "[helm-common] Pod labels",
      "additionalProperties": {
        "type": "string"
      }
    },
    "annotations": {
      "type": "object",
      "description": "[helm-common] Pod annotations",
      "additionalProperties": {
        "type": "string"
      }
    },
    "podLabels": {
      "type": "object",
      "description": "Labels used only in the Pod definition",
      "additionalProperties": {
        "type": "string"
      }
    },
    "podAnnotations": {
      "type": "object",
      "description": "Annotations used only in the Pod definition",
      "additionalProperties": {
        "type": "string"
      }
    },
    "serviceName": {
      "type": "string",
      "description": "[helm-common] The name of the service (not Kubernetes service), this will postfix the name"
    },
    "affinity": {
      "type": "object",
      "description": "Pod: The used affinity"
    },
    "tolerations": {
      "type": "array",
      "description": "Pod: Tolerations"
    },
    "nodeSelector": {
      "type": "object",
      "description": "Pod: Node selector"
    },
    "image": {
      "type": "object",
      "description": "Container: Image configuration",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Image repository"
        },
        "tag": {
          "type": "string",
          "description": "Image tag, used if the sha is not defined"
        },
        "sha": {
          "type": ["null", "string"],
          "description": "Image sha"
        }
      },
      "required": ["repository"],
      "anyOf": [{ "required": ["tag"] }, { "required": ["sha"] }]
    },
    "env": {
      "type": "object",
      "description": "[helm-common] Container: Environment variables",
      "additionalProperties": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Disable the environment variable",
                "enum": ["none"]
              }
            },
            "required": ["type"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Environment variable from a direct value",
                "enum": ["value"],
                "default": "value"
              },
              "order": {
                "type": "integer",
                "description": "Order of the environment variable",
                "default": 0,
                "enum": [0, 1]
              },
              "value": {
                "type": "string",
                "description": "Value of the environment variable"
              }
            },
            "required": ["value"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Environment variable from a ConfigMap or a Secret",
                "enum": ["configMap", "secret"]
              },
              "order": {
                "type": "integer",
                "description": "Order of the environment variable",
                "default": 0,
                "enum": [0, 1]
              },
              "name": {
                "type": "string",
                "description": "Name of the ConfigMap or Secret, if 'self', same name as the service"
              },
              "key": {
                "type": "string",
                "description": "Key of the ConfigMap or Secret"
              }
            },
            "required": ["type", "name", "key"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Free valueFrom for an environment variable"
              },
              "order": {
                "type": "integer",
                "description": "Order of the environment variable",
                "default": 0,
                "enum": [0, 1]
              },
              "valueFrom": {
                "type": "object"
              }
            },
            "required": ["type", "valueFrom"]
          }
        ]
      }
    },
    "resources": {
      "type": "object",
      "description": "Container: The container resources"
    },
    "command": {
      "type": "array",
      "description": "Container: The container command",
      "items": { "type": "string" }
    },
    "args": {
      "type": "array",
      "description": "Container: The container arguments",
      "items": { "type": "string" }
    },
    "volumeMounts": {
      "type": "object",
      "description": "Container: Volume mounts, the key is the mountPath of the volume"
    },
    "volumeDevices": {
      "type": "object",
      "description": "Container: Volume devices, the key is the devicePath of the volume"
    }
  },
  "additionalProperties": false,
  "properties": {
    "common": {},
    "global": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/globalImage"
        },
        "configMapNameOverride": {
          "$ref": "#/definitions/configMapNameOverride"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "description": "The number of old history to keep to allow rollback"
        }
      }
    },
    "nameOverride": {
      "$ref": "#/definitions/nameOverride"
    },
    "fullnameOverride": {
      "$ref": "#/definitions/fullnameOverride"
    },
    "serviceName": {
      "$ref": "#/definitions/serviceName"
    },
    "releaseTrunc": {
      "$ref": "#/definitions/releaseTrunc"
    },
    "prefixTrunc": {
      "$ref": "#/definitions/prefixTrunc"
    },
    "metadata": {
      "type": "boolean",
      "description": "Create a ConfigMap to expose some metadata about the chart"
    },
    "ingress": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the Ingress"
        },
        "nameOverride": {
          "$ref": "#/definitions/nameOverride"
        },
        "fullnameOverride": {
          "$ref": "#/definitions/fullnameOverride"
        },
        "serviceName": {
          "$ref": "#/definitions/serviceName"
        },
        "labels": {
          "$ref": "#/definitions/labels"
        },
        "annotations": {
          "$ref": "#/definitions/annotations"
        },
        "podLabels": {
          "$ref": "#/definitions/podLabels"
        },
        "podAnnotations": {
          "$ref": "#/definitions/podAnnotations"
        },
        "resources": {
          "$ref": "#/definitions/resources"
        },
        "affinity": {
          "$ref": "#/definitions/affinity"
        },
        "nodeSelector": {
          "$ref": "#/definitions/nodeSelector"
        },
        "hostGroups": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "hosts": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tls": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable TLS"
                  },
                  "secretName": {
                    "type": "string",
                    "description": "The name of the Secret"
                  }
                }
              }
            }
          }
        }
      }
    },
    "serviceAccount": {
      "$ref": "#/definitions/serviceAccount"
    },
    "securityContext": {
      "$ref": "#/definitions/securityContext"
    },
    "podSecurityContext": {
      "$ref": "#/definitions/podSecurityContext"
    },
    "affinity": {
      "$ref": "#/definitions/affinity"
    },
    "tolerations": {
      "$ref": "#/definitions/tolerations"
    },
    "dockerregistry": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "$ref": "#/definitions/annotations"
        },
        "content": {
          "type": "object",
          "description": "Docker registries authentication",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "username": {
                "type": "string",
                "description": "Username"
              },
              "password": {
                "type": "string",
                "description": "Password"
              },
              "email": {
                "type": "string",
                "description": "Email"
              }
            },
            "required": ["username", "password"]
          }
        }
      },
      "required": ["content"]
    },
    "secrets": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "$ref": "#/definitions/annotations"
        },
        "content": {
          "type": "object",
          "description": "Secrets configuration",
          "additionalProperties": {
            "oneOf": [
              {
                "type": "object",
                "description": "Secret from a direct value",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the secret",
                    "enum": ["value"],
                    "default": "value"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the secret"
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "description": "Secret for a basic authentication",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the secret",
                    "enum": ["basicAuth"]
                  },
                  "user": {
                    "type": "string",
                    "description": "Username"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password"
                  }
                }
              }
            ]
          }
        }
      },
      "required": ["content"]
    },
    "configMaps": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "$ref": "#/definitions/annotations"
        },
        "content": {
          "type": "object",
          "description": "ConfigMap configuration",
          "additionalProperties": {
            "oneOf": [
              {
                "type": "object",
                "description": "ConfigMap value",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the ConfigMap",
                    "enum": ["string"],
                    "default": "string"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the ConfigMap value"
                  }
                }
              },
              {
                "type": "object",
                "description": "ConfigMap YAML value",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the ConfigMap",
                    "enum": ["yaml"]
                  },
                  "value": {
                    "type": "object",
                    "description": "Value of the ConfigMap value as YAML"
                  }
                }
              },
              {
                "type": "object",
                "description": "ConfigMap JSON value",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the ConfigMap",
                    "enum": ["json"]
                  },
                  "value": {
                    "type": "object",
                    "description": "Value of the ConfigMap value as JSON"
                  }
                }
              }
            ]
          }
        }
      },
      "required": ["content"]
    },
    "services": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enable this service"
          },
          "type": {
            "type": "string",
            "description": "The type of the service",
            "default": "Deployment",
            "enum": ["Deployment", "StatefulSet", "Job", "CronJob"]
          },
          "name": {
            "type": "string",
            "description": "The name of the service"
          },
          "nameOverride": {
            "$ref": "#/definitions/nameOverride"
          },
          "labels": {
            "$ref": "#/definitions/labels"
          },
          "annotations": {
            "$ref": "#/definitions/annotations"
          },
          "podLabels": {
            "$ref": "#/definitions/podLabels"
          },
          "podAnnotations": {
            "$ref": "#/definitions/podAnnotations"
          },
          "serviceName": {
            "$ref": "#/definitions/serviceName"
          },
          "resources": {
            "$ref": "#/definitions/resources"
          },
          "releaseTrunc": {
            "$ref": "#/definitions/releaseTrunc"
          },
          "prefixTrunc": {
            "$ref": "#/definitions/prefixTrunc"
          },
          "affinity": {
            "$ref": "#/definitions/affinity"
          },
          "nodeSelector": {
            "$ref": "#/definitions/nodeSelector"
          },
          "replicaCount": {
            "type": "integer",
            "description": "The number of replicas"
          },
          "maxFailedIndexes": {
            "type": "integer",
            "description": "The maximum number of failed indexes"
          },
          "parallelism": {
            "type": "integer",
            "description": "The number of parallel jobs"
          },
          "backoffLimitPerIndex": {
            "type": "integer",
            "description": "The number of backoff limit per index"
          },
          "completionMode": {
            "type": "string",
            "description": "The completion mode of the job",
            "enum": ["Indexed", "NonIndexed"]
          },
          "completions": {
            "type": "integer",
            "description": "The number of completions"
          },
          "minReadySeconds": {
            "type": "integer",
            "description": "The minimum number of seconds for the Pod to be ready"
          },
          "persistentVolumeClaimRetentionPolicy": {
            "type": "object",
            "description": "The persistent volume claim retention policy"
          },
          "replicas": {
            "type": "integer",
            "description": "The number of replicas"
          },
          "paused": {
            "type": "boolean",
            "description": "Pause the deployment"
          },
          "progressDeadlineSeconds": {
            "type": "integer",
            "description": "The number of seconds for the deployment to be ready"
          },
          "strategy": {
            "type": "object",
            "description": "The deployment strategy",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of the strategy"
              },
              "rollingUpdate": {
                "type": "object",
                "description": "The rolling update strategy"
              }
            }
          },
          "suspend": {
            "type": "boolean",
            "description": "Suspend the job"
          },
          "template": {
            "type": "boolean",
            "description": "Create the service keys in the self ConfigMap even if the service is disabled"
          },
          "ttlSecondsAfterFinished": {
            "type": "integer",
            "description": "The number of seconds before the job is deleted"
          },
          "backoffLimit": {
            "type": "integer",
            "description": "The number of backoff limit"
          },
          "podReplacementPolicy": {
            "type": "string",
            "description": "The Pod replacement policy"
          },
          "restartPolicy": {
            "type": "string",
            "description": "The Pod restart policy"
          },
          "podFailurePolicy": {
            "type": "object",
            "description": "The Pod failure policy"
          },
          "activeDeadlineSeconds": {
            "type": "integer",
            "description": "The number of seconds before the job is deleted"
          },
          "ordinals": {
            "type": "object",
            "description": "The ordinals of the stateful set"
          },
          "podManagementPolicy": {
            "type": "string",
            "description": "The Pod management policy",
            "enum": ["OrderedReady", "Parallel"]
          },
          "updateStrategy": {
            "type": "object",
            "description": "The update strategy"
          },
          "schedule": {
            "type": "string",
            "description": "CronJob - The cron schedule in crontab notation"
          },
          "successfulJobsHistoryLimit": {
            "type": "integer",
            "description": "CronJob - successfulJobsHistoryLimit"
          },
          "failedJobsHistoryLimit": {
            "type": "integer",
            "description": "CronJob - failedJobsHistoryLimit"
          },
          "concurrencyPolicy": {
            "type": "string",
            "description": "CronJob - concurrencyPolicy",
            "enum": ["Allow", "Forbid", "Replace"]
          },
          "volumeClaimTemplates": {
            "type": "array",
            "description": "The volume claim templates, the key is the name of the volume claim template"
          },
          "volumes": {
            "type": "object",
            "description": "The volumes configuration, the key is the name of the volume"
          },
          "initContainers": {
            "type": "object",
            "description": "The initialization containers configuration",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "image": {
                  "$ref": "#/definitions/image"
                },
                "env": {
                  "$ref": "#/definitions/env"
                },
                "resources": {
                  "$ref": "#/definitions/resources"
                },
                "command": {
                  "$ref": "#/definitions/command"
                },
                "args": {
                  "$ref": "#/definitions/args"
                },
                "volumeMounts": {
                  "$ref": "#/definitions/volumeMounts"
                },
                "volumeDevices": {
                  "$ref": "#/definitions/volumeDevices"
                }
              },
              "required": ["image"]
            }
          },
          "containers": {
            "type": "object",
            "description": "The containers configuration",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "image": {
                  "$ref": "#/definitions/image"
                },
                "env": {
                  "$ref": "#/definitions/env"
                },
                "resources": {
                  "$ref": "#/definitions/resources"
                },
                "command": {
                  "$ref": "#/definitions/command"
                },
                "args": {
                  "$ref": "#/definitions/args"
                },
                "volumeMounts": {
                  "$ref": "#/definitions/volumeMounts"
                },
                "volumeDevices": {
                  "$ref": "#/definitions/volumeDevices"
                },
                "ports": {
                  "type": "object",
                  "description": "The ports, key is the name of the port"
                },
                "livenessProbe": {
                  "type": "object"
                },
                "readinessProbe": {
                  "type": "object"
                },
                "startupProbe": {
                  "type": "object"
                }
              },
              "required": ["image"]
            }
          },
          "ingress": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable the ingress for this service"
              },
              "path": {
                "type": "string",
                "description": "The path of the ingress"
              }
            }
          },
          "service": {
            "type": "object",
            "description": "The Kubernetes service configuration",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the service"
              },
              "type": {
                "type": "string",
                "description": "The type of the service",
                "default": "ClusterIP"
              },
              "servicePort": {
                "type": "integer",
                "description": "The port of the service",
                "default": 80
              },
              "labels": {
                "$ref": "#/definitions/labels"
              },
              "annotations": {
                "$ref": "#/definitions/annotations"
              },
              "ports": {
                "type": "array"
              }
            }
          },
          "podMonitor": {
            "type": "object",
            "description": "The Prometheus Pod monitor configuration",
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable the Pod monitor for this service"
              },
              "endpoint": {
                "type": "object",
                "description": "The endpoint of the Pod monitor"
              }
            }
          }
        }
      }
    }
  }
}
